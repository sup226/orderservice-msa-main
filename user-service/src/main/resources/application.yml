server:
  port: 0

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:mysql://localhost:3306/orderservice?serverTimezone=Asia/Seoul
    username: root
    password: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  data:
    redis:
      host: localhost
      port: 6379
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  # /actuator/refresh를 호출하면 yml의 내용이 초기화되면서 새로 설정됩니다.
  # 그 과정에서 갱신 대상에 포함되지 않는 애들이 있는데, 걔네들을 명시적으로 refresh 대상에 포함시키라는 설정
  cloud:
    refresh:
      extra-refreshable: com.zaxxer.hikari.HikariDataSource

jwt:
  expiration: 30
  secretKey: +Wpu19RQrd9GaG41rBWlQuObyi9Ac/NiHfciyH0CNrNh8USmoVGFYy2ik2NH0q+wEEZ05Ir4JQcspuQ96yJQAA==

  expirationRt: 14400
  secretKeyRt: vlkWoV6DWP02+VvsVaje2Nbie1MVQL3TJwIgWHtCM6sGlK8Bg+CmIPRKZsga2ptnFreGdyeJz4+Hv/xiKQbzgw==

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka/
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}

# 액츄에이터 등록 (beans: 컨테이너에 등록된 빈 보여줌. health: 서버 살아있는지 알려줌)
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh












